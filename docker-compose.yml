version: "3.7"
services:
  router:
    build: router
    depends_on: 
      - app
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      # - ./router/ssl:/etc/nginx/ssl
      - ./router/templates:/etc/nginx/templates

  db:
    # postgres 11 so that the debian buster postgresql-client is fully compatible.
    # (Simpler than hooking into the postgresql project Debian archives, which we would
    # do if we needed any postgres 12+ features.)
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes: 
      - pgdata:/var/lib/postgresql/data

  app:
    build: .
    depends_on:
      - db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      HOST_NAME: ${HOST_NAME}
      SITE_URL: ${SITE_URL}
    ports:
      - "8000:8000"
    volumes:
      # nice for code reloading in development; not needed in deployment
      - ".:/app"

volumes:
  pgdata:
